/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Birthday, BirthdayInterface } from "../../contracts/Birthday";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "birthdayTimestamp",
        type: "uint256",
      },
    ],
    name: "isBirthdayInRange",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102b6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634bfeb39a14610030575b600080fd5b61004361003e3660046101c5565b610057565b604051901515815260200160405180910390f35b60004281610064826100f6565b90506000610071856100f6565b9050600061007e8261012d565b6100878461012d565b61009191906101f4565b905060006100a2826201518061020b565b6100ac84866101f4565b6100ba906301e1338061020b565b6100c4908961022a565b6100ce919061022a565b90508085101580156100eb57506100e88162278d0061022a565b85105b979650505050505050565b6000806101076301e1338084610258565b905061011281610172565b1561012757610124620151808261022a565b90505b92915050565b600061013a6001836101f4565b915061014861019083610258565b610153606484610258565b61015e600485610258565b61016891906101f4565b610127919061022a565b600061017f60048361026c565b1561018c57506000919050565b61019760648361026c565b156101a457506001919050565b6101b06101908361026c565b156101bd57506000919050565b506001919050565b6000602082840312156101d757600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610206576102066101de565b500390565b6000816000190483118215151615610225576102256101de565b500290565b6000821982111561023d5761023d6101de565b500190565b634e487b7160e01b600052601260045260246000fd5b60008261026757610267610242565b500490565b60008261027b5761027b610242565b50069056fea264697066735822122004dd8839d889060afbe307e211a680ea8dea6550ea8ad0c974ec60521fbea6f164736f6c634300080b0033";

type BirthdayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BirthdayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Birthday__factory extends ContractFactory {
  constructor(...args: BirthdayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Birthday & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Birthday__factory {
    return super.connect(runner) as Birthday__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BirthdayInterface {
    return new Interface(_abi) as BirthdayInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Birthday {
    return new Contract(address, _abi, runner) as unknown as Birthday;
  }
}
