/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../../contracts/ContractManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvatarSettings",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvatarsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBirthdayPrizesPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMomentoPrizesPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPowersAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRafflesAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReferralManagerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSavTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSavrTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTeamsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTicketAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatarSettings",
        type: "address",
      },
    ],
    name: "updateAvatarSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatars",
        type: "address",
      },
    ],
    name: "updateAvatars",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_birthdayPrizesPool",
        type: "address",
      },
    ],
    name: "updateBirthdayPrizesPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_momentoPrizesPool",
        type: "address",
      },
    ],
    name: "updateMomentoPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_powers",
        type: "address",
      },
    ],
    name: "updatePowers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_raffles",
        type: "address",
      },
    ],
    name: "updateRaffles",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referralManager",
        type: "address",
      },
    ],
    name: "updateReferralManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_savToken",
        type: "address",
      },
    ],
    name: "updateSavToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_savrToken",
        type: "address",
      },
    ],
    name: "updateSavrToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
    ],
    name: "updateStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_teams",
        type: "address",
      },
    ],
    name: "updateTeams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ticket",
        type: "address",
      },
    ],
    name: "updateTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611926610118600039600081816107cf0152818161080f01528181610969015281816109a90152610a6601526119266000f3fe60806040526004361061020f5760003560e01c806352d1902d11610118578063a217fddf116100a0578063ad55c4b51161006f578063ad55c4b514610600578063d0e453aa1461061e578063d547741f1461063e578063e47514c11461065e578063f72c0d8b1461067e57600080fd5b8063a217fddf1461058e578063a345f38d146105a3578063a736cd48146105c3578063aa42a760146105e157600080fd5b80637c67b339116100e75780637c67b339146104fa5780638129fc1c1461051a57806391d148541461052f578063949757511461054f578063976edfd91461056f57600080fd5b806352d1902d146104875780636b360a3f1461049c578063703044e5146104bc5780637a286a03146104db57600080fd5b80633eb012a11161019b578063464d21b11161016a578063464d21b1146103f557806348ae1882146104155780634a550d92146104355780634f1ef28614610454578063507ad4011461046757600080fd5b80633eb012a1146103795780633f3ec92b14610397578063402870c7146103b757806345fcc61d146103d757600080fd5b8063248a9ca3116101e2578063248a9ca3146102bd5780632f2ff15d146102fb57806330c21c721461031b57806336568abe146103395780633659cfe61461035957600080fd5b806301ffc9a71461021457806306e34c2c146102495780630e9ed68b1461026b5780630f3936c41461029e575b600080fd5b34801561022057600080fd5b5061023461022f366004611510565b6106b2565b60405190151581526020015b60405180910390f35b34801561025557600080fd5b50610269610264366004611556565b6106e9565b005b34801561027757600080fd5b50610100546001600160a01b03165b6040516001600160a01b039091168152602001610240565b3480156102aa57600080fd5b50610105546001600160a01b0316610286565b3480156102c957600080fd5b506102ed6102d8366004611571565b60009081526065602052604090206001015490565b604051908152602001610240565b34801561030757600080fd5b5061026961031636600461158a565b610717565b34801561032757600080fd5b5060fb546001600160a01b0316610286565b34801561034557600080fd5b5061026961035436600461158a565b610741565b34801561036557600080fd5b50610269610374366004611556565b6107c4565b34801561038557600080fd5b5060fd546001600160a01b0316610286565b3480156103a357600080fd5b506102696103b2366004611556565b6108a4565b3480156103c357600080fd5b506102696103d2366004611556565b6108d2565b3480156103e357600080fd5b5060fe546001600160a01b0316610286565b34801561040157600080fd5b50610269610410366004611556565b610901565b34801561042157600080fd5b50610269610430366004611556565b61092f565b34801561044157600080fd5b50610104546001600160a01b0316610286565b6102696104623660046115cc565b61095e565b34801561047357600080fd5b50610269610482366004611556565b610a2b565b34801561049357600080fd5b506102ed610a59565b3480156104a857600080fd5b506102696104b7366004611556565b610b0c565b3480156104c857600080fd5b50610106546001600160a01b0316610286565b3480156104e757600080fd5b50610102546001600160a01b0316610286565b34801561050657600080fd5b50610269610515366004611556565b610b3a565b34801561052657600080fd5b50610269610b69565b34801561053b57600080fd5b5061023461054a36600461158a565b610cb6565b34801561055b57600080fd5b5061026961056a366004611556565b610ce1565b34801561057b57600080fd5b50610103546001600160a01b0316610286565b34801561059a57600080fd5b506102ed600081565b3480156105af57600080fd5b506102696105be366004611556565b610d10565b3480156105cf57600080fd5b5060fc546001600160a01b0316610286565b3480156105ed57600080fd5b50610101546001600160a01b0316610286565b34801561060c57600080fd5b5060ff546001600160a01b0316610286565b34801561062a57600080fd5b50610269610639366004611556565b610d3f565b34801561064a57600080fd5b5061026961065936600461158a565b610d6e565b34801561066a57600080fd5b50610269610679366004611556565b610d93565b34801561068a57600080fd5b506102ed7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b60006001600160e01b03198216637965db0b60e01b14806106e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006106f481610dc2565b5060fc80546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526065602052604090206001015461073281610dc2565b61073c8383610dcc565b505050565b6001600160a01b03811633146107b65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6107c08282610e52565b5050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561080d5760405162461bcd60e51b81526004016107ad9061168e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108566000805160206118aa833981519152546001600160a01b031690565b6001600160a01b03161461087c5760405162461bcd60e51b81526004016107ad906116da565b61088581610eb9565b604080516000808252602082019092526108a191839190610ee3565b50565b60006108af81610dc2565b5060fd80546001600160a01b0319166001600160a01b0392909216919091179055565b60006108dd81610dc2565b5061010380546001600160a01b0319166001600160a01b0392909216919091179055565b600061090c81610dc2565b5060ff80546001600160a01b0319166001600160a01b0392909216919091179055565b600061093a81610dc2565b5061010680546001600160a01b0319166001600160a01b0392909216919091179055565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109a75760405162461bcd60e51b81526004016107ad9061168e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109f06000805160206118aa833981519152546001600160a01b031690565b6001600160a01b031614610a165760405162461bcd60e51b81526004016107ad906116da565b610a1f82610eb9565b6107c082826001610ee3565b6000610a3681610dc2565b5060fe80546001600160a01b0319166001600160a01b0392909216919091179055565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610af95760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016107ad565b506000805160206118aa83398151915290565b6000610b1781610dc2565b5060fb80546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b4581610dc2565b5061010180546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff1615808015610b895750600054600160ff909116105b80610ba35750303b158015610ba3575060005460ff166001145b610c065760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107ad565b6000805460ff191660011790558015610c29576000805461ff0019166101001790555b610c3161104e565b610c3961104e565b610c44600033610dcc565b610c6e7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e333610dcc565b80156108a1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000610cec81610dc2565b5061010580546001600160a01b0319166001600160a01b0392909216919091179055565b6000610d1b81610dc2565b5061010080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610d4a81610dc2565b5061010480546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260656020526040902060010154610d8981610dc2565b61073c8383610e52565b6000610d9e81610dc2565b5061010280546001600160a01b0319166001600160a01b0392909216919091179055565b6108a181336110bb565b610dd68282610cb6565b6107c05760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610e0e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610e5c8282610cb6565b156107c05760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36107c081610dc2565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f165761073c83611114565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f70575060408051601f3d908101601f19168201909252610f6d91810190611726565b60015b610fd35760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016107ad565b6000805160206118aa83398151915281146110425760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016107ad565b5061073c8383836111b0565b600054610100900460ff166110b95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016107ad565b565b6110c58282610cb6565b6107c0576110d2816111db565b6110dd8360206111ed565b6040516020016110ee92919061176b565b60408051601f198184030181529082905262461bcd60e51b82526107ad916004016117e0565b6001600160a01b0381163b6111815760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016107ad565b6000805160206118aa83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6111b983611390565b6000825111806111c65750805b1561073c576111d583836113d0565b50505050565b60606106e36001600160a01b03831660145b606060006111fc836002611829565b611207906002611848565b67ffffffffffffffff81111561121f5761121f6115b6565b6040519080825280601f01601f191660200182016040528015611249576020820181803683370190505b509050600360fc1b8160008151811061126457611264611860565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061129357611293611860565b60200101906001600160f81b031916908160001a90535060006112b7846002611829565b6112c2906001611848565b90505b600181111561133a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106112f6576112f6611860565b1a60f81b82828151811061130c5761130c611860565b60200101906001600160f81b031916908160001a90535060049490941c9361133381611876565b90506112c5565b5083156113895760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107ad565b9392505050565b61139981611114565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061138983836040518060600160405280602781526020016118ca602791396060600080856001600160a01b03168560405161140d919061188d565b600060405180830381855af49150503d8060008114611448576040519150601f19603f3d011682016040523d82523d6000602084013e61144d565b606091505b509150915061145e86838387611468565b9695505050505050565b606083156114d45782516114cd576001600160a01b0385163b6114cd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107ad565b50816114de565b6114de83836114e6565b949350505050565b8151156114f65781518083602001fd5b8060405162461bcd60e51b81526004016107ad91906117e0565b60006020828403121561152257600080fd5b81356001600160e01b03198116811461138957600080fd5b80356001600160a01b038116811461155157600080fd5b919050565b60006020828403121561156857600080fd5b6113898261153a565b60006020828403121561158357600080fd5b5035919050565b6000806040838503121561159d57600080fd5b823591506115ad6020840161153a565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156115df57600080fd5b6115e88361153a565b9150602083013567ffffffffffffffff8082111561160557600080fd5b818501915085601f83011261161957600080fd5b81358181111561162b5761162b6115b6565b604051601f8201601f19908116603f01168101908382118183101715611653576116536115b6565b8160405282815288602084870101111561166c57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561173857600080fd5b5051919050565b60005b8381101561175a578181015183820152602001611742565b838111156111d55750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516117a381601785016020880161173f565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117d481602884016020880161173f565b01602801949350505050565b60208152600082518060208401526117ff81604085016020870161173f565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561184357611843611813565b500290565b6000821982111561185b5761185b611813565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161188557611885611813565b506000190190565b6000825161189f81846020870161173f565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b47c5d8750a6b04480f7dd5f4a753fbece6a4da6d0c78d05ff6810aec32e1c7064736f6c634300080b0033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  override connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
