/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ISaverSAVToken,
  ISaverSAVTokenInterface,
} from "../../../contracts/tokens/ISaverSAVToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "holderAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "snapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "snapshotCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016d5380380620016d583398101604081905262000034916200045a565b6040518060400160405280600681526020016534a9b0bb32b960d11b8152506040518060400160405280600381526020016229a0ab60e91b815250816003908051906020019062000087929190620003b4565b5080516200009d906004906020840190620003b4565b505050620000ba620000b4620000ce60201b60201c565b620000d2565b620000c6818362000124565b505062000537565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200013b82826200015860201b6200060e1760201c565b80600960008282546200014f9190620004af565b90915550505050565b6001600160a01b038216620001b35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b620001c1600083836200022c565b8060026000828254620001d59190620004af565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b620002448383836200024960201b620006d91760201c565b505050565b620002618383836200024460201b620006f81760201c565b6001600160a01b03831662000285576200027b82620002b0565b62000244620002e8565b6001600160a01b0382166200029f576200027b83620002b0565b620002aa83620002b0565b62000244825b6001600160a01b03811660009081526005602090815260408083209183905290912054620002e59190620002fa565b620002fa565b50565b620002f86006620002df60025490565b565b60006200030662000349565b905080620003148462000367565b101562000244578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b6000620003626008620003b060201b620007261760201c565b905090565b80546000906200037957506000919050565b815482906200038b90600190620004ca565b815481106200039e576200039e620004e4565b90600052602060002001549050919050565b5490565b828054620003c290620004fa565b90600052602060002090601f016020900481019282620003e6576000855562000431565b82601f106200040157805160ff191683800117855562000431565b8280016001018555821562000431579182015b828111156200043157825182559160200191906001019062000414565b506200043f92915062000443565b5090565b5b808211156200043f576000815560010162000444565b600080604083850312156200046e57600080fd5b825160208401519092506001600160a01b03811681146200048e57600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620004c557620004c562000499565b500190565b600082821015620004df57620004df62000499565b500390565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200050f57607f821691505b602082108114156200053157634e487b7160e01b600052602260045260246000fd5b50919050565b61118e80620005476000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063981b24d01161007c578063981b24d01461027a578063a2309ff81461028d578063a457c2d714610295578063a9059cbb146102a8578063dd62ed3e146102bb578063f2fde38b146102ce57600080fd5b8063715018a61461023457806379cc67901461023c5780638da5cb5b1461024f57806395d89b411461026a5780639711715a1461027257600080fd5b8063313ce5671161010a578063313ce567146101b957806339509351146101c85780633c9f861d146101db57806342966c68146101e35780634ee2cd7e146101f857806370a082311461020b57600080fd5b806306fdde0314610147578063095ea7b314610165578063098ab6a11461018857806318160ddd1461019e57806323b872dd146101a6575b600080fd5b61014f6102e1565b60405161015c9190610f67565b60405180910390f35b610178610173366004610fd3565b610373565b604051901515815260200161015c565b61019061038d565b60405190815260200161015c565b600254610190565b6101786101b4366004610ffd565b6103a4565b6040516012815260200161015c565b6101786101d6366004610fd3565b6103c8565b6101906103ea565b6101f66101f1366004611039565b610402565b005b610190610206366004610fd3565b61040f565b610190610219366004611052565b6001600160a01b031660009081526020819052604090205490565b6101f6610468565b6101f661024a366004610fd3565b61047c565b600a546040516001600160a01b03909116815260200161015c565b61014f610495565b6101f66104a4565b610190610288366004611039565b6104b4565b600954610190565b6101786102a3366004610fd3565b6104df565b6101786102b6366004610fd3565b61055f565b6101906102c936600461106d565b61056d565b6101f66102dc366004611052565b610598565b6060600380546102f0906110a0565b80601f016020809104026020016040519081016040528092919081815260200182805461031c906110a0565b80156103695780601f1061033e57610100808354040283529160200191610369565b820191906000526020600020905b81548152906001019060200180831161034c57829003601f168201915b5050505050905090565b60003361038181858561072a565b60019150505b92915050565b600061039761084e565b61039f6108a8565b905090565b6000336103b28582856108b3565b6103bd85858561092d565b506001949350505050565b6000336103818185856103db838361056d565b6103e591906110f1565b61072a565b60006103f560025490565b60095461039f9190611109565b61040c3382610adc565b50565b6001600160a01b038216600090815260056020526040812081908190610436908590610c1a565b915091508161045d576001600160a01b03851660009081526020819052604090205461045f565b805b95945050505050565b61047061084e565b61047a6000610d11565b565b6104878233836108b3565b6104918282610adc565b5050565b6060600480546102f0906110a0565b6104ac61084e565b61040c610d63565b60008060006104c4846006610c1a565b91509150816104d5576002546104d7565b805b949350505050565b600033816104ed828661056d565b9050838110156105525760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103bd828686840361072a565b60003361038181858561092d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105a061084e565b6001600160a01b0381166106055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610549565b61040c81610d11565b6001600160a01b0382166106645760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610549565b61067060008383610dbd565b806002600082825461068291906110f1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0383166106fd576106f082610dc8565b6106f8610dfa565b505050565b6001600160a01b038216610714576106f083610dc8565b61071d83610dc8565b6106f882610dc8565b5490565b6001600160a01b03831661078c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610549565b6001600160a01b0382166107ed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610549565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600a546001600160a01b0316331461047a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610549565b600061039f60085490565b60006108bf848461056d565b90506000198114610927578181101561091a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610549565b610927848484840361072a565b50505050565b6001600160a01b0383166109915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610549565b6001600160a01b0382166109f35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610549565b6109fe838383610dbd565b6001600160a01b03831660009081526020819052604090205481811015610a765760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610549565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610927565b6001600160a01b038216610b3c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610549565b610b4882600083610dbd565b6001600160a01b03821660009081526020819052604090205481811015610bbc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610549565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60008060008411610c665760405162461bcd60e51b815260206004820152601660248201527504552433230536e617073686f743a20696420697320360541b6044820152606401610549565b610c6e6108a8565b841115610cbd5760405162461bcd60e51b815260206004820152601d60248201527f4552433230536e617073686f743a206e6f6e6578697374656e742069640000006044820152606401610549565b6000610cc98486610e08565b8454909150811415610ce2576000809250925050610d0a565b6001846001018281548110610cf957610cf9611120565b906000526020600020015492509250505b9250929050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610d73600880546001019055565b6000610d7d6108a8565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb6781604051610db091815260200190565b60405180910390a1919050565b6106f88383836106d9565b6001600160a01b0381166000908152600560209081526040808320918390529091205461040c9190610eb3565b610eb3565b61047a6006610df560025490565b8154600090610e1957506000610387565b82546000905b80821015610e66576000610e338383610efd565b60008781526020902090915085908201541115610e5257809150610e60565b610e5d8160016110f1565b92505b50610e1f565b600082118015610e92575083610e8f86610e81600186611109565b600091825260209091200190565b54145b15610eab57610ea2600183611109565b92505050610387565b509050610387565b6000610ebd6108a8565b905080610ec984610f1f565b10156106f8578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b6000610f0c6002848418611136565b610f18908484166110f1565b9392505050565b8054600090610f3057506000919050565b81548290610f4090600190611109565b81548110610f5057610f50611120565b90600052602060002001549050919050565b919050565b600060208083528351808285015260005b81811015610f9457858101830151858201604001528201610f78565b81811115610fa6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f6257600080fd5b60008060408385031215610fe657600080fd5b610fef83610fbc565b946020939093013593505050565b60008060006060848603121561101257600080fd5b61101b84610fbc565b925061102960208501610fbc565b9150604084013590509250925092565b60006020828403121561104b57600080fd5b5035919050565b60006020828403121561106457600080fd5b610f1882610fbc565b6000806040838503121561108057600080fd5b61108983610fbc565b915061109760208401610fbc565b90509250929050565b600181811c908216806110b457607f821691505b602082108114156110d557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611104576111046110db565b500190565b60008282101561111b5761111b6110db565b500390565b634e487b7160e01b600052603260045260246000fd5b60008261115357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220cfb7d04a73f38bb8c86f55116525f0898914ffad0237f3e7ebd89d9a9270aa6264736f6c634300080b0033";

type ISaverSAVTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ISaverSAVTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ISaverSAVToken__factory extends ContractFactory {
  constructor(...args: ISaverSAVTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply_: BigNumberish,
    holderAddress_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ISaverSAVToken> {
    return super.deploy(
      initialSupply_,
      holderAddress_,
      overrides || {}
    ) as Promise<ISaverSAVToken>;
  }
  override getDeployTransaction(
    initialSupply_: BigNumberish,
    holderAddress_: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialSupply_,
      holderAddress_,
      overrides || {}
    );
  }
  override attach(address: string): ISaverSAVToken {
    return super.attach(address) as ISaverSAVToken;
  }
  override connect(signer: Signer): ISaverSAVToken__factory {
    return super.connect(signer) as ISaverSAVToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ISaverSAVTokenInterface {
    return new utils.Interface(_abi) as ISaverSAVTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISaverSAVToken {
    return new Contract(address, _abi, signerOrProvider) as ISaverSAVToken;
  }
}
